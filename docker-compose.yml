version: '3.8'
services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - appnetwork
  backend: 
    build: ./backend
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    volumes:
      - ./backend:/app  
      - /app/__pycache__ 
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnetwork
  frontend:
    build: ./frontend
    ports:
      - "${VITE_PORT}:${VITE_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - appnetwork

volumes:
  postgres_data:

networks:
  appnetwork: